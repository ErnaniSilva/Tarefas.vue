{"remainingRequest":"/home/ernani/Projetos/Vue/Curso-Vue/10-Projeto/tarefas/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ernani/Projetos/Vue/Curso-Vue/10-Projeto/tarefas/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ernani/Projetos/Vue/Curso-Vue/10-Projeto/tarefas/src/App.vue","mtime":1602031930938},{"path":"/home/ernani/Projetos/Vue/Curso-Vue/10-Projeto/tarefas/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ernani/Projetos/Vue/Curso-Vue/10-Projeto/tarefas/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ernani/Projetos/Vue/Curso-Vue/10-Projeto/tarefas/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ernani/Projetos/Vue/Curso-Vue/10-Projeto/tarefas/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport TaskProgress from './Components/TaskProgress.vue'\nimport TaskGrid from './Components/TaskGrid.vue'\nimport NewTask from './Components/NewTask.vue'\nexport default {\n\tcomponents:{TaskProgress, TaskGrid, NewTask},\n\tdata(){\n\t\treturn{\n\t\t\ttasks:[]\t\n\t\t}\n\t},\n\tcomputed:{\n\t\tprogress(){\n\t\t\tconst total = this.tasks.length\n\t\t\tconst done = this.tasks.filter(t => !t.pending).length\n\t\t\treturn Math.round(done / total * 100) || 0\n\t\t}\n\t},\n\twatch:{\n\t\ttasks(){\n\t\t\tlocalStorage.setItem('tasks', JSON.stringify(this.tasks))\n\t\t}\n\t},\n\tmethods:{\n\t\taddTask(task){\n\t\t\tconst  sameName = t => t.name === task.name\n\t\t\tconst reallyNew = this.tasks.filter(sameName).length == 0//aqui estamos filtrando os nomes e comparando\n\t\t\tif(reallyNew){\n\t\t\t\tthis.tasks.push({\n\t\t\t\t\tname:task.name,\n\t\t\t\t\tpending: task.pending || true\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\t\tdeleteTask(i){\n\t\t\tthis.tasks.splice(i, 1)\n\t\t},\n\n\t\ttoogleTaskStats(i){\n\t\t\tthis.tasks[i].pending = !this.tasks[i].pending\n\t\t}\n\t},\n\tcreated(){\n\t\tconst json = localStorage.getItem('tasks')\n\t\tconst array = JSON.parse(json)\n\t\tif(Array.isArray(array)){\n\t\t\tthis.tasks = JSON.parse(json) || []\n\t\t}\t\n\t}\n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n\t<div id=\"app\">\n\t\t<h1>Tarefas</h1>\n\t\t<TaskProgress :progress=\"progress\"/>\n\t\t<NewTask @taskAdded=\"addTask\"/>\n\t\t<TaskGrid :tasks=\"tasks\" \n\t\t\t\t@taskDeleted=\"deleteTask\" \n\t\t\t\t@taskStatsChanged=\"toogleTaskStats\"/>\n\t</div>\n</template>\n\n<script>\nimport TaskProgress from './Components/TaskProgress.vue'\nimport TaskGrid from './Components/TaskGrid.vue'\nimport NewTask from './Components/NewTask.vue'\nexport default {\n\tcomponents:{TaskProgress, TaskGrid, NewTask},\n\tdata(){\n\t\treturn{\n\t\t\ttasks:[]\t\n\t\t}\n\t},\n\tcomputed:{\n\t\tprogress(){\n\t\t\tconst total = this.tasks.length\n\t\t\tconst done = this.tasks.filter(t => !t.pending).length\n\t\t\treturn Math.round(done / total * 100) || 0\n\t\t}\n\t},\n\twatch:{\n\t\ttasks(){\n\t\t\tlocalStorage.setItem('tasks', JSON.stringify(this.tasks))\n\t\t}\n\t},\n\tmethods:{\n\t\taddTask(task){\n\t\t\tconst  sameName = t => t.name === task.name\n\t\t\tconst reallyNew = this.tasks.filter(sameName).length == 0//aqui estamos filtrando os nomes e comparando\n\t\t\tif(reallyNew){\n\t\t\t\tthis.tasks.push({\n\t\t\t\t\tname:task.name,\n\t\t\t\t\tpending: task.pending || true\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\t\tdeleteTask(i){\n\t\t\tthis.tasks.splice(i, 1)\n\t\t},\n\n\t\ttoogleTaskStats(i){\n\t\t\tthis.tasks[i].pending = !this.tasks[i].pending\n\t\t}\n\t},\n\tcreated(){\n\t\tconst json = localStorage.getItem('tasks')\n\t\tconst array = JSON.parse(json)\n\t\tif(Array.isArray(array)){\n\t\t\tthis.tasks = JSON.parse(json) || []\n\t\t}\t\n\t}\n}\n</script>\n\n<style>\n\tbody {\n\t\tfont-family: 'Lato', sans-serif;\n\t\tbackground: linear-gradient(to right, rgb(22, 34, 42), rgb(58, 96, 115));\n\t\tcolor: #FFF;\n\t}\n\n\t#app {\n\t\tdisplay: flex;\n\t\tflex: 1;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\theight: 100vh;\n\t}\n\n\t#app h1 {\n\t\tmargin-bottom: 5px;\n\t\tfont-weight: 300;\n\t\tfont-size: 3rem;\n\t}\n</style>\n"]}]}